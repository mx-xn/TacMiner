{
  "theorem_file": {
    "occ_inv": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "not_occ_Leaf": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "min_leaf": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "maj_leaf": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "maj_not_occ": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "min_not_occ": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "search_tree_l": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "search_tree_r": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "maj_l": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "min_r": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "not_right": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "not_left": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "go_left": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "go_right": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "insert_leaf": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "insert_l": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "insert_r": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "insert_eq": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "rmax_leaf_leaf": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "rmax_t_Z_leaf": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "rmax_1": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "rmax_2": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "rmax_3": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "rmax_4": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "rmax_5": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "rmax_6": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "rmax_7": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "rmax_8": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "rmax_9": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "rmax_t1_t2t3": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "RM_0": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "RM_1": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "rm_left": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "rm_right": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "rm_root_base_case": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "rm_2": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "rm_3": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "rm_4": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "rm_5": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "rm_6": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v",
    "rm_root_lemma": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v"
  },
  "custom_tactics": {
    "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_PN.v": {
      "occ_inv": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "not_occ_Leaf": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "min_leaf": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "maj_leaf": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "maj_not_occ": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom_tac10",
            "definition": "Ltac custom_tac10 H0 H1 H2 H3 H4 := intros H0 H1 H2 H3; elim H2; intros; absurd ( H0 < H0); auto; apply H4. \n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac10": [
            {
              "lemma_name": "maj_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "min_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": [
          "custom_tac10"
        ]
      },
      "min_not_occ": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom_tac10",
            "definition": "Ltac custom_tac10 H0 H1 H2 H3 H4 := intros H0 H1 H2 H3; elim H2; intros; absurd ( H0 < H0); auto; apply H4. \n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac10": [
            {
              "lemma_name": "maj_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "min_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": [
          "custom_tac10"
        ]
      },
      "search_tree_l": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom_tac10",
            "definition": "Ltac custom_tac10 H0 H1 H2 H3 H4 := intros H0 H1 H2 H3; elim H2; intros; absurd ( H0 < H0); auto; apply H4. \n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac10": [
            {
              "lemma_name": "maj_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "min_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "search_tree_r": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom_tac10",
            "definition": "Ltac custom_tac10 H0 H1 H2 H3 H4 := intros H0 H1 H2 H3; elim H2; intros; absurd ( H0 < H0); auto; apply H4. \n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac10": [
            {
              "lemma_name": "maj_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "min_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "maj_l": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom_tac10",
            "definition": "Ltac custom_tac10 H0 H1 H2 H3 H4 := intros H0 H1 H2 H3; elim H2; intros; absurd ( H0 < H0); auto; apply H4. \n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac10": [
            {
              "lemma_name": "maj_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "min_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "min_r": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom_tac10",
            "definition": "Ltac custom_tac10 H0 H1 H2 H3 H4 := intros H0 H1 H2 H3; elim H2; intros; absurd ( H0 < H0); auto; apply H4. \n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac10": [
            {
              "lemma_name": "maj_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "min_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "not_right": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom_tac10",
            "definition": "Ltac custom_tac10 H0 H1 H2 H3 H4 := intros H0 H1 H2 H3; elim H2; intros; absurd ( H0 < H0); auto; apply H4. \n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac10": [
            {
              "lemma_name": "maj_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "min_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": [
          "custom_tac13"
        ]
      },
      "not_left": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom_tac10",
            "definition": "Ltac custom_tac10 H0 H1 H2 H3 H4 := intros H0 H1 H2 H3; elim H2; intros; absurd ( H0 < H0); auto; apply H4. \n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac10": [
            {
              "lemma_name": "maj_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "min_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "go_left": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom_tac10",
            "definition": "Ltac custom_tac10 H0 H1 H2 H3 H4 := intros H0 H1 H2 H3; elim H2; intros; absurd ( H0 < H0); auto; apply H4. \n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac10": [
            {
              "lemma_name": "maj_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "min_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "go_right": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom_tac10",
            "definition": "Ltac custom_tac10 H0 H1 H2 H3 H4 := intros H0 H1 H2 H3; elim H2; intros; absurd ( H0 < H0); auto; apply H4. \n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac10": [
            {
              "lemma_name": "maj_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "min_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "insert_leaf": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom_tac10",
            "definition": "Ltac custom_tac10 H0 H1 H2 H3 H4 := intros H0 H1 H2 H3; elim H2; intros; absurd ( H0 < H0); auto; apply H4. \n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac10": [
            {
              "lemma_name": "maj_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "min_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "insert_l": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom_tac10",
            "definition": "Ltac custom_tac10 H0 H1 H2 H3 H4 := intros H0 H1 H2 H3; elim H2; intros; absurd ( H0 < H0); auto; apply H4. \n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac10": [
            {
              "lemma_name": "maj_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "min_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "insert_r": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom_tac10",
            "definition": "Ltac custom_tac10 H0 H1 H2 H3 H4 := intros H0 H1 H2 H3; elim H2; intros; absurd ( H0 < H0); auto; apply H4. \n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac10": [
            {
              "lemma_name": "maj_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "min_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "insert_eq": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom_tac10",
            "definition": "Ltac custom_tac10 H0 H1 H2 H3 H4 := intros H0 H1 H2 H3; elim H2; intros; absurd ( H0 < H0); auto; apply H4. \n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac10": [
            {
              "lemma_name": "maj_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "min_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "rmax_leaf_leaf": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom_tac10",
            "definition": "Ltac custom_tac10 H0 H1 H2 H3 H4 := intros H0 H1 H2 H3; elim H2; intros; absurd ( H0 < H0); auto; apply H4. \n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac10": [
            {
              "lemma_name": "maj_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "min_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "rmax_t_Z_leaf": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom_tac10",
            "definition": "Ltac custom_tac10 H0 H1 H2 H3 H4 := intros H0 H1 H2 H3; elim H2; intros; absurd ( H0 < H0); auto; apply H4. \n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac10": [
            {
              "lemma_name": "maj_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "min_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "rmax_1": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom_tac10",
            "definition": "Ltac custom_tac10 H0 H1 H2 H3 H4 := intros H0 H1 H2 H3; elim H2; intros; absurd ( H0 < H0); auto; apply H4. \n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac10": [
            {
              "lemma_name": "maj_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "min_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "rmax_2": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom_tac10",
            "definition": "Ltac custom_tac10 H0 H1 H2 H3 H4 := intros H0 H1 H2 H3; elim H2; intros; absurd ( H0 < H0); auto; apply H4. \n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac10": [
            {
              "lemma_name": "maj_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "min_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "rmax_3": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom_tac10",
            "definition": "Ltac custom_tac10 H0 H1 H2 H3 H4 := intros H0 H1 H2 H3; elim H2; intros; absurd ( H0 < H0); auto; apply H4. \n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac10": [
            {
              "lemma_name": "maj_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "min_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "rmax_4": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom_tac10",
            "definition": "Ltac custom_tac10 H0 H1 H2 H3 H4 := intros H0 H1 H2 H3; elim H2; intros; absurd ( H0 < H0); auto; apply H4. \n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac10": [
            {
              "lemma_name": "maj_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "min_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "rmax_5": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom_tac10",
            "definition": "Ltac custom_tac10 H0 H1 H2 H3 H4 := intros H0 H1 H2 H3; elim H2; intros; absurd ( H0 < H0); auto; apply H4. \n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac10": [
            {
              "lemma_name": "maj_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "min_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "rmax_6": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom_tac10",
            "definition": "Ltac custom_tac10 H0 H1 H2 H3 H4 := intros H0 H1 H2 H3; elim H2; intros; absurd ( H0 < H0); auto; apply H4. \n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac10": [
            {
              "lemma_name": "maj_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "min_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "rmax_7": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom_tac10",
            "definition": "Ltac custom_tac10 H0 H1 H2 H3 H4 := intros H0 H1 H2 H3; elim H2; intros; absurd ( H0 < H0); auto; apply H4. \n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac10": [
            {
              "lemma_name": "maj_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "min_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": [
          "custom_tac32"
        ]
      },
      "rmax_8": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom_tac10",
            "definition": "Ltac custom_tac10 H0 H1 H2 H3 H4 := intros H0 H1 H2 H3; elim H2; intros; absurd ( H0 < H0); auto; apply H4. \n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac10": [
            {
              "lemma_name": "maj_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "min_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": [
          "custom_tac32"
        ]
      },
      "rmax_9": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom_tac10",
            "definition": "Ltac custom_tac10 H0 H1 H2 H3 H4 := intros H0 H1 H2 H3; elim H2; intros; absurd ( H0 < H0); auto; apply H4. \n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac10": [
            {
              "lemma_name": "maj_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "min_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": [
          "custom_tac56",
          "custom_tac3"
        ]
      },
      "rmax_t1_t2t3": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom_tac10",
            "definition": "Ltac custom_tac10 H0 H1 H2 H3 H4 := intros H0 H1 H2 H3; elim H2; intros; absurd ( H0 < H0); auto; apply H4. \n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac10": [
            {
              "lemma_name": "maj_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "min_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": [
          "custom_tac65"
        ]
      },
      "RM_0": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom_tac10",
            "definition": "Ltac custom_tac10 H0 H1 H2 H3 H4 := intros H0 H1 H2 H3; elim H2; intros; absurd ( H0 < H0); auto; apply H4. \n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac10": [
            {
              "lemma_name": "maj_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "min_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "RM_1": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom_tac10",
            "definition": "Ltac custom_tac10 H0 H1 H2 H3 H4 := intros H0 H1 H2 H3; elim H2; intros; absurd ( H0 < H0); auto; apply H4. \n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac10": [
            {
              "lemma_name": "maj_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "min_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": [
          "custom_tac42"
        ]
      },
      "rm_left": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom_tac10",
            "definition": "Ltac custom_tac10 H0 H1 H2 H3 H4 := intros H0 H1 H2 H3; elim H2; intros; absurd ( H0 < H0); auto; apply H4. \n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac10": [
            {
              "lemma_name": "maj_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "min_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "rm_right": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom_tac10",
            "definition": "Ltac custom_tac10 H0 H1 H2 H3 H4 := intros H0 H1 H2 H3; elim H2; intros; absurd ( H0 < H0); auto; apply H4. \n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac10": [
            {
              "lemma_name": "maj_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "min_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "rm_root_base_case": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom_tac10",
            "definition": "Ltac custom_tac10 H0 H1 H2 H3 H4 := intros H0 H1 H2 H3; elim H2; intros; absurd ( H0 < H0); auto; apply H4. \n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac10": [
            {
              "lemma_name": "maj_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "min_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "rm_2": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom_tac10",
            "definition": "Ltac custom_tac10 H0 H1 H2 H3 H4 := intros H0 H1 H2 H3; elim H2; intros; absurd ( H0 < H0); auto; apply H4. \n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac10": [
            {
              "lemma_name": "maj_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "min_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "rm_3": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom_tac10",
            "definition": "Ltac custom_tac10 H0 H1 H2 H3 H4 := intros H0 H1 H2 H3; elim H2; intros; absurd ( H0 < H0); auto; apply H4. \n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac10": [
            {
              "lemma_name": "maj_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "min_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "rm_4": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom_tac10",
            "definition": "Ltac custom_tac10 H0 H1 H2 H3 H4 := intros H0 H1 H2 H3; elim H2; intros; absurd ( H0 < H0); auto; apply H4. \n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac10": [
            {
              "lemma_name": "maj_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "min_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "rm_5": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom_tac10",
            "definition": "Ltac custom_tac10 H0 H1 H2 H3 H4 := intros H0 H1 H2 H3; elim H2; intros; absurd ( H0 < H0); auto; apply H4. \n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac10": [
            {
              "lemma_name": "maj_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "min_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "rm_6": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom_tac10",
            "definition": "Ltac custom_tac10 H0 H1 H2 H3 H4 := intros H0 H1 H2 H3; elim H2; intros; absurd ( H0 < H0); auto; apply H4. \n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac10": [
            {
              "lemma_name": "maj_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "min_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "rm_root_lemma": {
        "available_tactics": [
          {
            "name": "custom_tac32",
            "definition": "Ltac custom_tac32 H0 := elim H0; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac3",
            "definition": "Ltac custom_tac3  := left; auto with searchtrees. \n"
          },
          {
            "name": "custom_tac13",
            "definition": "Ltac custom_tac13 H0 H1 H2 := unfold H0; intros; absurd ( H1 < H2); auto with searchtrees. \n"
          },
          {
            "name": "custom_tac42",
            "definition": "Ltac custom_tac42 H0 := intros; apply H0.\n"
          },
          {
            "name": "custom_tac56",
            "definition": "Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 := elim H0; intros H1 H2 H3 H4 H5 H6. \n"
          },
          {
            "name": "custom_tac65",
            "definition": "Ltac custom_tac65 H0 := apply H0; auto with searchtrees. *)\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom_tac10",
            "definition": "Ltac custom_tac10 H0 H1 H2 H3 H4 := intros H0 H1 H2 H3; elim H2; intros; absurd ( H0 < H0); auto; apply H4. \n"
          }
        ],
        "examples": {
          "custom_tac32": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : or (occ q' t1) (occ q' t')"
              ],
              "tactic_res": [
                "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
              ]
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_8",
              "tactic_sig": "custom_tac32 _i .",
              "tactic_args": [
                "c18_goal : Z.le n q",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac3": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac3 .",
              "tactic_args": [
                "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac13": [
            {
              "lemma_name": "not_right",
              "tactic_sig": "custom_tac13 not _i _i .",
              "tactic_args": [
                "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                "c1_n : Z",
                "c2_p : Z"
              ],
              "tactic_res": [
                "c4_goal : not (Z.lt n p)",
                "c4_H1 : occ p t2",
                "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
              ]
            }
          ],
          "custom_tac42": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom_tac42 rm_intro .",
              "tactic_args": [
                "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c2_goal : not (occ n Z_leaf)",
                "c2_n : Z",
                "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c3_n : Z",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                "c4_n : Z",
                "c5_goal : search_tree Z_leaf",
                "c5_n : Z"
              ]
            }
          ],
          "custom_tac56": [
            {
              "lemma_name": "rmax_9",
              "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
              "tactic_args": [
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": [
                "c11_H6 : search_tree t'",
                "c11_H5 : not (occ q t')",
                "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                "c11_H1 : occ q (Z_bnode p t2 t3)"
              ]
            }
          ],
          "custom_tac65": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom_tac65 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": []
            }
          ],
          "custom_tac10": [
            {
              "lemma_name": "maj_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "min_not_occ",
              "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
              "tactic_args": [
                "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      }
    }
  }
}