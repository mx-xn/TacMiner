{
  "theorem_file": {
    "occ_inv": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "not_occ_Leaf": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "min_leaf": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "maj_leaf": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "maj_not_occ": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "min_not_occ": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "search_tree_l": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "search_tree_r": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "maj_l": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "min_r": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "not_right": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "not_left": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "go_left": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "go_right": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "insert_leaf": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "insert_l": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "insert_r": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "insert_eq": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "rmax_leaf_leaf": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "rmax_t_Z_leaf": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "rmax_1": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "rmax_2": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "rmax_3": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "rmax_4": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "rmax_5": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "rmax_6": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "rmax_7": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "rmax_8": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "rmax_9": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "rmax_t1_t2t3": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "RM_0": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "RM_1": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "rm_left": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "rm_right": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "rm_root_base_case": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "rm_2": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "rm_3": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "rm_4": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "rm_5": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "rm_6": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "rm_root_lemma": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v",
    "conv_example": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "imp_trans": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "one_neutral_left": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "le_i_SSi": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "all_imp_dist": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "mult_le_compat_r": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "le_mult_mult": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "le_O_mult": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "lt_8_9": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "lt_S": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "unfold_example": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "ex1": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "absurd": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "double_neg_i": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "modus_ponens": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "contrap": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "disj4_3": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "and_commutes": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "or_commutes": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "ex_imp_ex": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "diff_of_squares": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "eq_sym": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "Zmult_distr_1": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "regroup": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "le_lt_S_eq": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "conditional_rewrite_example": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "eq_trans": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "my_I": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "my_False_ind": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "leibniz_sym": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "excluded_middle_peirce": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "peirce_classic": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "classic_excluded_middle": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "excluded_middle_implies_to_or": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "implies_to_or_excluded_middle": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "classic_de_morgan_not_and_not": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "de_morgan_not_and_not_excluded_middle": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "my_le_n": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "my_le_S": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "my_le_le": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "my_lt_le": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "my_le_trans": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "my_and_left": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "my_and_right": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "my_and_ind": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "my_or_introl": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "my_or_intror": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "my_or_ind": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "my_or_False": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "my_or_comm": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "my_ex_intro": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "my_not_ex_all": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "my_ex_ex": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "ex_my_ex": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "not_False": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "triple_neg": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "P3PQ": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v",
    "imp_absurd": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v"
  },
  "custom_tactics": {
    "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap11_comp_TM.v": {
      "occ_inv": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ]
        },
        "used_tactics": []
      },
      "not_occ_Leaf": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ]
        },
        "used_tactics": []
      },
      "min_leaf": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ]
        },
        "used_tactics": []
      },
      "maj_leaf": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ]
        },
        "used_tactics": []
      },
      "maj_not_occ": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom9",
            "definition": "Ltac custom9 H0 H1 H2 H3 H4 H6 H5 :=  intros H0 H1 H2 H3; [elim H2; [intros H4; [absurd ( H0 < H6 ); [apply H5 | auto | .. ] | .. ] | .. ] | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ],
          "custom9": []
        },
        "used_tactics": [
          "custom9"
        ]
      },
      "min_not_occ": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom9",
            "definition": "Ltac custom9 H0 H1 H2 H3 H4 H6 H5 :=  intros H0 H1 H2 H3; [elim H2; [intros H4; [absurd ( H0 < H6 ); [apply H5 | auto | .. ] | .. ] | .. ] | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ],
          "custom9": []
        },
        "used_tactics": [
          "custom9"
        ]
      },
      "search_tree_l": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom9",
            "definition": "Ltac custom9 H0 H1 H2 H3 H4 H6 H5 :=  intros H0 H1 H2 H3; [elim H2; [intros H4; [absurd ( H0 < H6 ); [apply H5 | auto | .. ] | .. ] | .. ] | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ],
          "custom9": []
        },
        "used_tactics": []
      },
      "search_tree_r": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom9",
            "definition": "Ltac custom9 H0 H1 H2 H3 H4 H6 H5 :=  intros H0 H1 H2 H3; [elim H2; [intros H4; [absurd ( H0 < H6 ); [apply H5 | auto | .. ] | .. ] | .. ] | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ],
          "custom9": []
        },
        "used_tactics": []
      },
      "maj_l": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom9",
            "definition": "Ltac custom9 H0 H1 H2 H3 H4 H6 H5 :=  intros H0 H1 H2 H3; [elim H2; [intros H4; [absurd ( H0 < H6 ); [apply H5 | auto | .. ] | .. ] | .. ] | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ],
          "custom9": []
        },
        "used_tactics": []
      },
      "min_r": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom9",
            "definition": "Ltac custom9 H0 H1 H2 H3 H4 H6 H5 :=  intros H0 H1 H2 H3; [elim H2; [intros H4; [absurd ( H0 < H6 ); [apply H5 | auto | .. ] | .. ] | .. ] | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ],
          "custom9": []
        },
        "used_tactics": []
      },
      "not_right": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom9",
            "definition": "Ltac custom9 H0 H1 H2 H3 H4 H6 H5 :=  intros H0 H1 H2 H3; [elim H2; [intros H4; [absurd ( H0 < H6 ); [apply H5 | auto | .. ] | .. ] | .. ] | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ],
          "custom9": []
        },
        "used_tactics": []
      },
      "not_left": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom9",
            "definition": "Ltac custom9 H0 H1 H2 H3 H4 H6 H5 :=  intros H0 H1 H2 H3; [elim H2; [intros H4; [absurd ( H0 < H6 ); [apply H5 | auto | .. ] | .. ] | .. ] | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ],
          "custom9": []
        },
        "used_tactics": []
      },
      "go_left": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom9",
            "definition": "Ltac custom9 H0 H1 H2 H3 H4 H6 H5 :=  intros H0 H1 H2 H3; [elim H2; [intros H4; [absurd ( H0 < H6 ); [apply H5 | auto | .. ] | .. ] | .. ] | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ],
          "custom9": []
        },
        "used_tactics": []
      },
      "go_right": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom9",
            "definition": "Ltac custom9 H0 H1 H2 H3 H4 H6 H5 :=  intros H0 H1 H2 H3; [elim H2; [intros H4; [absurd ( H0 < H6 ); [apply H5 | auto | .. ] | .. ] | .. ] | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ],
          "custom9": []
        },
        "used_tactics": [
          "custom45",
          "custom29",
          "custom0"
        ]
      },
      "insert_leaf": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom9",
            "definition": "Ltac custom9 H0 H1 H2 H3 H4 H6 H5 :=  intros H0 H1 H2 H3; [elim H2; [intros H4; [absurd ( H0 < H6 ); [apply H5 | auto | .. ] | .. ] | .. ] | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ],
          "custom9": []
        },
        "used_tactics": []
      },
      "insert_l": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom9",
            "definition": "Ltac custom9 H0 H1 H2 H3 H4 H6 H5 :=  intros H0 H1 H2 H3; [elim H2; [intros H4; [absurd ( H0 < H6 ); [apply H5 | auto | .. ] | .. ] | .. ] | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ],
          "custom9": []
        },
        "used_tactics": []
      },
      "insert_r": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom9",
            "definition": "Ltac custom9 H0 H1 H2 H3 H4 H6 H5 :=  intros H0 H1 H2 H3; [elim H2; [intros H4; [absurd ( H0 < H6 ); [apply H5 | auto | .. ] | .. ] | .. ] | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ],
          "custom9": []
        },
        "used_tactics": []
      },
      "insert_eq": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom9",
            "definition": "Ltac custom9 H0 H1 H2 H3 H4 H6 H5 :=  intros H0 H1 H2 H3; [elim H2; [intros H4; [absurd ( H0 < H6 ); [apply H5 | auto | .. ] | .. ] | .. ] | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ],
          "custom9": []
        },
        "used_tactics": []
      },
      "rmax_leaf_leaf": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom9",
            "definition": "Ltac custom9 H0 H1 H2 H3 H4 H6 H5 :=  intros H0 H1 H2 H3; [elim H2; [intros H4; [absurd ( H0 < H6 ); [apply H5 | auto | .. ] | .. ] | .. ] | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ],
          "custom9": []
        },
        "used_tactics": []
      },
      "rmax_t_Z_leaf": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom9",
            "definition": "Ltac custom9 H0 H1 H2 H3 H4 H6 H5 :=  intros H0 H1 H2 H3; [elim H2; [intros H4; [absurd ( H0 < H6 ); [apply H5 | auto | .. ] | .. ] | .. ] | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ],
          "custom9": []
        },
        "used_tactics": []
      },
      "rmax_1": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom9",
            "definition": "Ltac custom9 H0 H1 H2 H3 H4 H6 H5 :=  intros H0 H1 H2 H3; [elim H2; [intros H4; [absurd ( H0 < H6 ); [apply H5 | auto | .. ] | .. ] | .. ] | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ],
          "custom9": []
        },
        "used_tactics": []
      },
      "rmax_2": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom9",
            "definition": "Ltac custom9 H0 H1 H2 H3 H4 H6 H5 :=  intros H0 H1 H2 H3; [elim H2; [intros H4; [absurd ( H0 < H6 ); [apply H5 | auto | .. ] | .. ] | .. ] | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ],
          "custom9": []
        },
        "used_tactics": []
      },
      "rmax_3": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom9",
            "definition": "Ltac custom9 H0 H1 H2 H3 H4 H6 H5 :=  intros H0 H1 H2 H3; [elim H2; [intros H4; [absurd ( H0 < H6 ); [apply H5 | auto | .. ] | .. ] | .. ] | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ],
          "custom9": []
        },
        "used_tactics": []
      },
      "rmax_4": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom9",
            "definition": "Ltac custom9 H0 H1 H2 H3 H4 H6 H5 :=  intros H0 H1 H2 H3; [elim H2; [intros H4; [absurd ( H0 < H6 ); [apply H5 | auto | .. ] | .. ] | .. ] | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ],
          "custom9": []
        },
        "used_tactics": []
      },
      "rmax_5": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom9",
            "definition": "Ltac custom9 H0 H1 H2 H3 H4 H6 H5 :=  intros H0 H1 H2 H3; [elim H2; [intros H4; [absurd ( H0 < H6 ); [apply H5 | auto | .. ] | .. ] | .. ] | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ],
          "custom9": []
        },
        "used_tactics": []
      },
      "rmax_6": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom9",
            "definition": "Ltac custom9 H0 H1 H2 H3 H4 H6 H5 :=  intros H0 H1 H2 H3; [elim H2; [intros H4; [absurd ( H0 < H6 ); [apply H5 | auto | .. ] | .. ] | .. ] | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ],
          "custom9": []
        },
        "used_tactics": []
      },
      "rmax_7": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom9",
            "definition": "Ltac custom9 H0 H1 H2 H3 H4 H6 H5 :=  intros H0 H1 H2 H3; [elim H2; [intros H4; [absurd ( H0 < H6 ); [apply H5 | auto | .. ] | .. ] | .. ] | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ],
          "custom9": []
        },
        "used_tactics": [
          "custom10",
          "custom3",
          "custom26"
        ]
      },
      "rmax_8": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom9",
            "definition": "Ltac custom9 H0 H1 H2 H3 H4 H6 H5 :=  intros H0 H1 H2 H3; [elim H2; [intros H4; [absurd ( H0 < H6 ); [apply H5 | auto | .. ] | .. ] | .. ] | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ],
          "custom9": []
        },
        "used_tactics": []
      },
      "rmax_9": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom9",
            "definition": "Ltac custom9 H0 H1 H2 H3 H4 H6 H5 :=  intros H0 H1 H2 H3; [elim H2; [intros H4; [absurd ( H0 < H6 ); [apply H5 | auto | .. ] | .. ] | .. ] | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ],
          "custom9": []
        },
        "used_tactics": []
      },
      "rmax_t1_t2t3": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom9",
            "definition": "Ltac custom9 H0 H1 H2 H3 H4 H6 H5 :=  intros H0 H1 H2 H3; [elim H2; [intros H4; [absurd ( H0 < H6 ); [apply H5 | auto | .. ] | .. ] | .. ] | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ],
          "custom9": []
        },
        "used_tactics": [
          "custom6"
        ]
      },
      "RM_0": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom9",
            "definition": "Ltac custom9 H0 H1 H2 H3 H4 H6 H5 :=  intros H0 H1 H2 H3; [elim H2; [intros H4; [absurd ( H0 < H6 ); [apply H5 | auto | .. ] | .. ] | .. ] | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ],
          "custom9": []
        },
        "used_tactics": []
      },
      "RM_1": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom9",
            "definition": "Ltac custom9 H0 H1 H2 H3 H4 H6 H5 :=  intros H0 H1 H2 H3; [elim H2; [intros H4; [absurd ( H0 < H6 ); [apply H5 | auto | .. ] | .. ] | .. ] | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ],
          "custom9": []
        },
        "used_tactics": [
          "custom41"
        ]
      },
      "rm_left": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom9",
            "definition": "Ltac custom9 H0 H1 H2 H3 H4 H6 H5 :=  intros H0 H1 H2 H3; [elim H2; [intros H4; [absurd ( H0 < H6 ); [apply H5 | auto | .. ] | .. ] | .. ] | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ],
          "custom9": []
        },
        "used_tactics": [
          "custom41"
        ]
      },
      "rm_right": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom9",
            "definition": "Ltac custom9 H0 H1 H2 H3 H4 H6 H5 :=  intros H0 H1 H2 H3; [elim H2; [intros H4; [absurd ( H0 < H6 ); [apply H5 | auto | .. ] | .. ] | .. ] | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ],
          "custom9": []
        },
        "used_tactics": []
      },
      "rm_root_base_case": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom9",
            "definition": "Ltac custom9 H0 H1 H2 H3 H4 H6 H5 :=  intros H0 H1 H2 H3; [elim H2; [intros H4; [absurd ( H0 < H6 ); [apply H5 | auto | .. ] | .. ] | .. ] | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ],
          "custom9": []
        },
        "used_tactics": []
      },
      "rm_2": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom9",
            "definition": "Ltac custom9 H0 H1 H2 H3 H4 H6 H5 :=  intros H0 H1 H2 H3; [elim H2; [intros H4; [absurd ( H0 < H6 ); [apply H5 | auto | .. ] | .. ] | .. ] | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ],
          "custom9": []
        },
        "used_tactics": []
      },
      "rm_3": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom9",
            "definition": "Ltac custom9 H0 H1 H2 H3 H4 H6 H5 :=  intros H0 H1 H2 H3; [elim H2; [intros H4; [absurd ( H0 < H6 ); [apply H5 | auto | .. ] | .. ] | .. ] | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ],
          "custom9": []
        },
        "used_tactics": []
      },
      "rm_4": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom9",
            "definition": "Ltac custom9 H0 H1 H2 H3 H4 H6 H5 :=  intros H0 H1 H2 H3; [elim H2; [intros H4; [absurd ( H0 < H6 ); [apply H5 | auto | .. ] | .. ] | .. ] | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ],
          "custom9": []
        },
        "used_tactics": [
          "custom26"
        ]
      },
      "rm_5": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom9",
            "definition": "Ltac custom9 H0 H1 H2 H3 H4 H6 H5 :=  intros H0 H1 H2 H3; [elim H2; [intros H4; [absurd ( H0 < H6 ); [apply H5 | auto | .. ] | .. ] | .. ] | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ],
          "custom9": []
        },
        "used_tactics": []
      },
      "rm_6": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom9",
            "definition": "Ltac custom9 H0 H1 H2 H3 H4 H6 H5 :=  intros H0 H1 H2 H3; [elim H2; [intros H4; [absurd ( H0 < H6 ); [apply H5 | auto | .. ] | .. ] | .. ] | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ],
          "custom9": []
        },
        "used_tactics": []
      },
      "rm_root_lemma": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  intro H0; [elim H0 | .. ].\n"
          },
          {
            "name": "custom29",
            "definition": "Ltac custom29 H0 H1 H2 :=  absurd ( occ H0 H1 ); [apply H2 | auto | .. ].\n"
          },
          {
            "name": "custom45",
            "definition": "Ltac custom45 H0 :=  apply H0; [auto with zarith | .. ].\n"
          },
          {
            "name": "custom3",
            "definition": "Ltac custom3 H0 :=  elim H0; [auto with searchtrees | .. ]. \n"
          },
          {
            "name": "custom10",
            "definition": "Ltac custom10 H0 H1 H2 H3 :=  elim ( occ_inv H0 ); [ | custom0 H1; [intro H2 | intro H3 | .. ] | .. ].\n"
          },
          {
            "name": "custom26",
            "definition": "Ltac custom26 H0 :=  rewrite H0; [auto with searchtrees | .. ].\n"
          },
          {
            "name": "custom16",
            "definition": "Ltac custom16 H0 H1 :=  intros H0 H1; [elim ( occ_inv H1 ) | .. ].\n"
          },
          {
            "name": "custom41",
            "definition": "Ltac custom41 H0 H1 H2 :=  apply H0; [ |  | custom16 H1 H2 | .. ]. \n"
          },
          {
            "name": "custom40",
            "definition": "Ltac custom40 H0 H1 :=  intro H0; [elim H1 | .. ]. \n"
          },
          {
            "name": "custom6",
            "definition": "Ltac custom6 H0 :=  apply H0; [auto with searchtrees | auto with searchtrees | auto with searchtrees | auto with searchtrees | .. ]. *)\n\n(** END_DREAMPROVER_TACTICS **)\n\n(* binary search trees on Z *)\n(* (C) Pierre Cast\u00e9ran *)\n\nSet Implicit Arguments.\n"
          },
          {
            "name": "custom9",
            "definition": "Ltac custom9 H0 H1 H2 H3 H4 H6 H5 :=  intros H0 H1 H2 H3; [elim H2; [intros H4; [absurd ( H0 < H6 ); [apply H5 | auto | .. ] | .. ] | .. ] | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom0 e .",
              "tactic_args": [
                "c3_goal : forall _ : eq n p, occ p t2"
              ],
              "tactic_res": [
                "c5_goal : occ n t2",
                "c5_e : eq n p"
              ]
            }
          ],
          "custom29": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom29 _i _i not_left .",
              "tactic_args": [
                "c10_goal : occ p t2",
                "c2_p : Z",
                "c1_t1 : Z_btree"
              ],
              "tactic_res": [
                "c12_goal : Z.ge p n"
              ]
            }
          ],
          "custom45": [
            {
              "lemma_name": "go_right",
              "tactic_sig": "custom45 Zle_not_lt .",
              "tactic_args": [
                "c8_goal : not (Z.lt p p)"
              ],
              "tactic_res": []
            }
          ],
          "custom3": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom3 _i .",
              "tactic_args": [
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
              ],
              "tactic_res": []
            }
          ],
          "custom10": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom10 _i H0 H1 H1 .",
              "tactic_args": [
                "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c2_H : occ q' (Z_bnode n t1 t')"
              ],
              "tactic_res": [
                "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c4_H1 : occ q' t1",
                "c4_H0 : or (occ q' t1) (occ q' t')",
                "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c5_H1 : occ q' t'",
                "c5_H0 : or (occ q' t1) (occ q' t')"
              ]
            }
          ],
          "custom26": [
            {
              "lemma_name": "rmax_7",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                "c6_H0 : eq n q'"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "rm_4",
              "tactic_sig": "custom26 _i .",
              "tactic_args": [
                "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                "c5_eg : eq q p0"
              ],
              "tactic_res": []
            }
          ],
          "custom16": [],
          "custom41": [
            {
              "lemma_name": "RM_1",
              "tactic_sig": "custom41 rm_intro p H .",
              "tactic_args": [
                "c2_goal : RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
              ],
              "tactic_res": [
                "c3_goal : not (occ n Z_leaf)",
                "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                "c5_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c5_p : Z",
                "c6_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)",
                "c6_p : Z",
                "c7_goal : search_tree Z_leaf"
              ]
            },
            {
              "lemma_name": "rm_left",
              "tactic_sig": "custom41 rm_intro p0 H2 .",
              "tactic_args": [
                "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
              ],
              "tactic_res": [
                "c3_goal : not (occ p (Z_bnode n t' t2))",
                "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                "c5_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c5_H2 : occ p0 (Z_bnode n t1 t2)",
                "c5_p0 : Z",
                "c6_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                "c6_H2 : occ p0 (Z_bnode n t1 t2)",
                "c6_p0 : Z",
                "c7_goal : search_tree (Z_bnode n t' t2)"
              ]
            }
          ],
          "custom40": [],
          "custom6": [
            {
              "lemma_name": "rmax_t1_t2t3",
              "tactic_sig": "custom6 rmax_intro .",
              "tactic_args": [
                "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
              ],
              "tactic_res": [
                "c2_goal : not (occ q (Z_bnode n t1 t'))",
                "c3_goal : search_tree (Z_bnode n t1 t')"
              ]
            }
          ],
          "custom9": []
        },
        "used_tactics": []
      }
    },
    "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_comp_TM.v": {
      "conv_example": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": [
          "custom12"
        ]
      },
      "imp_trans": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": [
          "custom0"
        ]
      },
      "one_neutral_left": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "le_i_SSi": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "all_imp_dist": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "mult_le_compat_r": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": [
          "custom0"
        ]
      },
      "le_mult_mult": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "le_O_mult": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "lt_8_9": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": [
          "custom11"
        ]
      },
      "lt_S": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": [
          "custom0"
        ]
      },
      "unfold_example": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "ex1": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "absurd": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "double_neg_i": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "modus_ponens": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "contrap": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": [
          "custom11"
        ]
      },
      "disj4_3": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "and_commutes": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "or_commutes": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "ex_imp_ex": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": [
          "custom0"
        ]
      },
      "diff_of_squares": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "eq_sym": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "Zmult_distr_1": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "regroup": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "le_lt_S_eq": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "conditional_rewrite_example": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "eq_trans": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "my_I": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": [
          "custom12"
        ]
      },
      "my_False_ind": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "leibniz_sym": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "excluded_middle_peirce": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "peirce_classic": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "classic_excluded_middle": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "excluded_middle_implies_to_or": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "implies_to_or_excluded_middle": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "classic_de_morgan_not_and_not": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "de_morgan_not_and_not_excluded_middle": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "my_le_n": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "my_le_S": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "my_le_le": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "my_lt_le": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "my_le_trans": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "my_and_left": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "my_and_right": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "my_and_ind": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "my_or_introl": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "my_or_intror": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "my_or_ind": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "my_or_False": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "my_or_comm": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "my_ex_intro": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "my_not_ex_all": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "my_ex_ex": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "ex_my_ex": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "not_False": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "triple_neg": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "P3PQ": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      },
      "imp_absurd": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "lt_8_9",
              "tactic_sig": "custom11 lt le_n .",
              "tactic_args": [
                "c1_goal : lt 8 9"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": [
            {
              "lemma_name": "conv_example",
              "tactic_sig": "custom12 n H .",
              "tactic_args": [
                "c1_goal : forall (n : nat) (_ : lt (Init.Nat.mul 7 5) n), le (Init.Nat.mul 6 6) n"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "my_I",
              "tactic_sig": "custom12 P p .",
              "tactic_args": [
                "c1_goal : my_True"
              ],
              "tactic_res": []
            }
          ]
        },
        "used_tactics": []
      }
    }
  }
}