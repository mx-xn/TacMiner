{
  "theorem_file": {
    "conv_example": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "imp_trans": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "one_neutral_left": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "le_i_SSi": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "all_imp_dist": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "mult_le_compat_r": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "le_mult_mult": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "le_O_mult": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "lt_8_9": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "lt_S": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "unfold_example": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "ex1": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "absurd": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "double_neg_i": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "modus_ponens": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "contrap": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "disj4_3": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "and_commutes": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "or_commutes": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "ex_imp_ex": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "diff_of_squares": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "eq_sym": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "Zmult_distr_1": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "regroup": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "le_lt_S_eq": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "conditional_rewrite_example": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "eq_trans": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "my_I": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "my_False_ind": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "leibniz_sym": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "excluded_middle_peirce": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "peirce_classic": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "classic_excluded_middle": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "excluded_middle_implies_to_or": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "implies_to_or_excluded_middle": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "classic_de_morgan_not_and_not": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "de_morgan_not_and_not_excluded_middle": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "my_le_n": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "my_le_S": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "my_le_le": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "my_lt_le": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "my_le_trans": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "my_and_left": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "my_and_right": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "my_and_ind": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "my_or_introl": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "my_or_intror": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "my_or_ind": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "my_or_False": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "my_or_comm": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "my_ex_intro": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "my_not_ex_all": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "my_ex_ex": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "ex_my_ex": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "not_False": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "triple_neg": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "P3PQ": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v",
    "imp_absurd": "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v"
  },
  "custom_tactics": {
    "/Users/maxinexin/Documents/Projects/tacminer/tacminer/benchmarks/coq-art/raw/chap5_TM.v": {
      "conv_example": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": [
          "custom12"
        ]
      },
      "imp_trans": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": [
          "custom0"
        ]
      },
      "one_neutral_left": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "le_i_SSi": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "all_imp_dist": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "mult_le_compat_r": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": [
          "custom0"
        ]
      },
      "le_mult_mult": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "le_O_mult": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "lt_8_9": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": [
          "custom11"
        ]
      },
      "lt_S": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": [
          "custom0"
        ]
      },
      "unfold_example": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "ex1": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "absurd": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "double_neg_i": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "modus_ponens": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "contrap": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": [
          "custom11"
        ]
      },
      "disj4_3": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "and_commutes": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "or_commutes": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "ex_imp_ex": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": [
          "custom0"
        ]
      },
      "diff_of_squares": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "eq_sym": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "Zmult_distr_1": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "regroup": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "le_lt_S_eq": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "conditional_rewrite_example": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "eq_trans": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "my_I": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": [
          "custom12"
        ]
      },
      "my_False_ind": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "leibniz_sym": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "excluded_middle_peirce": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "peirce_classic": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "classic_excluded_middle": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "excluded_middle_implies_to_or": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "implies_to_or_excluded_middle": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "classic_de_morgan_not_and_not": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "de_morgan_not_and_not_excluded_middle": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "my_le_n": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "my_le_S": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "my_le_le": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "my_lt_le": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "my_le_trans": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "my_and_left": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "my_and_right": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "my_and_ind": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "my_or_introl": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "my_or_intror": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "my_or_ind": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "my_or_False": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "my_or_comm": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "my_ex_intro": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "my_not_ex_all": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "my_ex_ex": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "ex_my_ex": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "not_False": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "triple_neg": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "P3PQ": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      },
      "imp_absurd": {
        "available_tactics": [
          {
            "name": "custom0",
            "definition": "Ltac custom0 H0 :=  apply H0; [assumption | .. ].\n"
          },
          {
            "name": "custom11",
            "definition": "Ltac custom11 H0 H1 :=  unfold H0; [apply H1 | .. ].\n"
          },
          {
            "name": "custom12",
            "definition": "Ltac custom12 H0 H1 :=  intros H0 H1; [assumption | .. ].\n"
          }
        ],
        "examples": {
          "custom0": [
            {
              "lemma_name": "imp_trans",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q",
                "c2_H : forall _ : P, Q"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "mult_le_compat_r",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Nat.mul m n) (Nat.mul m p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 mult_le_compat_r .",
              "tactic_args": [
                "c3_goal : le (Init.Nat.mul a b) (Init.Nat.mul c b)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "le_mult_mult",
              "tactic_sig": "custom0 Nat.mul_le_mono_l .",
              "tactic_args": [
                "c4_goal : le (Init.Nat.mul c b) (Init.Nat.mul c d)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "lt_S",
              "tactic_sig": "custom0 le_S .",
              "tactic_args": [
                "c3_goal : le (S n) (S p)"
              ],
              "tactic_res": []
            },
            {
              "lemma_name": "ex_imp_ex",
              "tactic_sig": "custom0 _i .",
              "tactic_args": [
                "c3_goal : Q a",
                "c2_H0 : forall (x : A) (_ : P x), Q x"
              ],
              "tactic_res": []
            }
          ],
          "custom11": [
            {
              "lemma_name": "contrap",
              "tactic_sig": "custom11 not imp_trans .",
              "tactic_args": [
                "c2_goal : forall (_ : forall _ : A, B) (_ : not B), not A"
              ],
              "tactic_res": []
            }
          ],
          "custom12": []
        },
        "used_tactics": []
      }
    }
  }
}