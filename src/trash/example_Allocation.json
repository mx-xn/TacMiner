{
    "custom22": [
      {
        "lemma_name": "eq_sym",
        "tactic_sig": "custom22 eq x y H .",
        "tactic_args": [
          "c1_goal : forall (x y : t) (_ : eq x y), eq y x"
        ],
        "tactic_res": [
          "c2_goal : EqSet.Equal e0 e",
          "c2_H : EqSet.Equal e e0",
          "c2_e0 : eqs",
          "c2_e : eqs",
          "c3_goal : False",
          "c3_H : False",
          "c3_e0 : eqs",
          "c3_e : errmsg"
        ]
      },
      {
        "lemma_name": "ge_refl",
        "tactic_sig": "custom22 EqSet.Subset x y H .",
        "tactic_args": [
          "c4_goal : forall (x y : t)\n  (_ : match x with\n       | OK a =>\n           match y with\n           | OK b =>\n               forall a0 : EqSet.elt,\n               iff (EqSet.In a0 a) (EqSet.In a0 b)\n           | Error _ => False\n           end\n       | Error _ => match y with\n                    | OK _ => False\n                    | Error _ => True\n                    end\n       end),\nmatch x with\n| OK a =>\n    match y with\n    | OK b => EqSet.Subset b a\n    | Error _ => False\n    end\n| Error _ => True\nend"
        ],
        "tactic_res": [
          "c5_goal : forall (a : EqSet.elt) (_ : EqSet.In a e0), EqSet.In a e",
          "c5_H : forall a : EqSet.elt, iff (EqSet.In a e) (EqSet.In a e0)",
          "c5_e0 : eqs",
          "c5_e : eqs",
          "c6_goal : True",
          "c6_H : False",
          "c6_e0 : eqs",
          "c6_e : errmsg"
        ]
      }
    ],
    "custom14": [
      {
        "lemma_name": "eq_sym",
        "tactic_sig": "custom14 a H .",
        "tactic_args": [
          "c2_goal : EqSet.Equal e0 e",
          "c2_H : EqSet.Equal e e0"
        ],
        "tactic_res": [
          "c4_goal : iff (EqSet.In a e0) (EqSet.In a e0)",
          "c4_a : EqSet.elt"
        ]
      },
      {
        "lemma_name": "eq_trans",
        "tactic_sig": "custom14 a H .",
        "tactic_args": [
          "c2_goal : EqSet.Equal e e1",
          "c2_H : forall a : EqSet.elt, iff (EqSet.In a e) (EqSet.In a e0)"
        ],
        "tactic_res": [
          "c5_goal : iff (EqSet.In a e0) (EqSet.In a e1)",
          "c5_a : EqSet.elt"
        ]
      }
    ],
    "custom12": [
      {
        "lemma_name": "eq_trans",
        "tactic_sig": "custom12 eq x y z H H0 .",
        "tactic_args": [
          "c1_goal : forall (x y z : t) (_ : eq x y) (_ : eq y z), eq x z"
        ],
        "tactic_res": [
          "c2_goal : EqSet.Equal e e1",
          "c2_H0 : EqSet.Equal e0 e1",
          "c2_H : EqSet.Equal e e0",
          "c2_e1 : eqs",
          "c2_e0 : eqs",
          "c2_e : eqs",
          "c3_goal : False",
          "c3_H0 : False",
          "c3_H : EqSet.Equal e e0",
          "c3_e1 : errmsg",
          "c3_e0 : eqs",
          "c3_e : eqs",
          "c4_goal : match z with\n| OK _ => False\n| Error _ => True\nend",
          "c4_H0 : match y with\n| OK a => match z with\n          | OK b => EqSet.Equal a b\n          | Error _ => False\n          end\n| Error _ => match z with\n             | OK _ => False\n             | Error _ => True\n             end\nend",
          "c4_H : match y with\n| OK _ => False\n| Error _ => True\nend",
          "c4_z : True",
          "c4_y : True",
          "c4_e : errmsg"
        ]
      },
      {
        "lemma_name": "ge_trans",
        "tactic_sig": "custom12 EqSet.Subset x y z H H0 .",
        "tactic_args": [
          "c2_goal : forall (x y z : t)\n  (_ : match x with\n       | OK a =>\n           match y with\n           | OK b => EqSet.Subset b a\n           | Error _ => False\n           end\n       | Error _ => True\n       end)\n  (_ : match y with\n       | OK a =>\n           match z with\n           | OK b => EqSet.Subset b a\n           | Error _ => False\n           end\n       | Error _ => True\n       end),\nmatch x with\n| OK a =>\n    match z with\n    | OK b => EqSet.Subset b a\n    | Error _ => False\n    end\n| Error _ => True\nend"
        ],
        "tactic_res": [
          "c3_goal : forall (a : EqSet.elt) (_ : EqSet.In a e1), EqSet.In a e",
          "c3_H0 : forall (a : EqSet.elt) (_ : EqSet.In a e1), EqSet.In a e0",
          "c3_H : forall (a : EqSet.elt) (_ : EqSet.In a e0), EqSet.In a e",
          "c3_e1 : eqs",
          "c3_e0 : eqs",
          "c3_e : eqs",
          "c4_goal : False",
          "c4_H0 : False",
          "c4_H : forall (a : EqSet.elt) (_ : EqSet.In a e0), EqSet.In a e",
          "c4_e1 : errmsg",
          "c4_e0 : eqs",
          "c4_e : eqs",
          "c5_goal : True",
          "c5_H0 : match y with\n| OK a =>\n    match z with\n    | OK b =>\n        forall (a0 : EqSet.elt) (_ : EqSet.In a0 b), EqSet.In a0 a\n    | Error _ => False\n    end\n| Error _ => True\nend",
          "c5_H : True",
          "c5_z : True",
          "c5_y : True",
          "c5_e : errmsg"
        ]
      }
    ],
    "custom19": [
      {
        "lemma_name": "ge_refl",
        "tactic_sig": "custom19 H .",
        "tactic_args": [
          "c7_goal : EqSet.In a e",
          "c5_H : forall a : EqSet.elt, iff (EqSet.In a e) (EqSet.In a e0)"
        ],
        "tactic_res": []
      }
    ],
    "custom2": [
      {
        "lemma_name": "ge_lub_left",
        "tactic_sig": "custom2 lub ge EqSet.Subset x y a H EqSet.union_2 .",
        "tactic_args": [
          "c1_goal : forall x y : t, ge (lub x y) x"
        ],
        "tactic_res": [
          "c2_goal : EqSet.In a e",
          "c2_H : EqSet.In a e",
          "c2_a : EqSet.elt",
          "c2_e0 : eqs",
          "c2_e : eqs"
        ]
      },
      {
        "lemma_name": "ge_lub_right",
        "tactic_sig": "custom2 lub ge EqSet.Subset x y a H EqSet.union_3 .",
        "tactic_args": [
          "c1_goal : forall x y : t, ge (lub x y) y"
        ],
        "tactic_res": [
          "c2_goal : EqSet.In a e0",
          "c2_H : EqSet.In a e0",
          "c2_a : EqSet.elt",
          "c2_e0 : eqs",
          "c2_e : eqs"
        ]
      }
    ]
  }